// Generated by CoffeeScript 1.9.2
(function() {
  var Identifies, Input, Keywords, Literals, Output, OutputString, Separators, isKeyword, isLiteral, isNumber, isSeparator, lexicalAnalysis, lineNumbers, streamWords,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Input = document.getElementById("input-area");

  Output = document.getElementById("output-area");

  OutputString = "";

  Keywords = ["ROWVECTOR", "COLVECTOR", "MATRIX", "PRINT"];

  Separators = ["(", ",", ")", "=", "+", "-", "*", "^", "@"];

  Identifies = [];

  Literals = [];


  /* */

  streamWords = function() {
    var stage;
    stage = Input.value;
    if (event.keyCode === 13) {
      return lexicalAnalysis(stage);
    }
  };

  lexicalAnalysis = function(stage) {
    var i, j, k, l, n, preResult, ref, ref1, results, s, stageLength;
    stageLength = stage.length - '11';
    preResult = '';
    results = [];
    for (i = j = 0, ref = stageLength; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
      if ((ref1 = stage.charAt(i), indexOf.call(Separators, ref1) >= 0) || stage.charAt(i) === '\n' || stage.charAt(i) === ' ') {
        k = isKeyword(preResult);
        l = false;
        if (k === false) {
          l = isLiteral(preResult);
        }
        n = isNumber(preResult);
        if (k === false && l === false && n === false) {
          console.log("undefined symbol");
        }
        s = isSeparator(stage.charAt(i));
        preResult = '';
        continue;
      }
      results.push(preResult += stage.charAt(i));
    }
    return results;
  };

  Input.addEventListener('keyup', streamWords, false);


  /* */

  lineNumbers = function() {
    var highLine, i, j, lowLine, results;
    highLine = document.getElementById("high-line-numbers");
    lowLine = document.getElementById("low-line-numbers");
    results = [];
    for (i = j = 1; j <= 50; i = ++j) {
      highLine.innerHTML += i + "\n";
      results.push(lowLine.innerHTML += i + "\n");
    }
    return results;
  };

  lineNumbers();

  isKeyword = function(str) {
    var index, j, len, word;
    for (index = j = 0, len = Keywords.length; j < len; index = ++j) {
      word = Keywords[index];
      if (word === str) {
        console.log(Keywords[index] + " keyword");
        return true;
      }
    }
    return false;
  };

  isNumber = function(str) {
    if (("0" <= str && str <= "9")) {
      console.log(str + " number  ");
      return true;
    } else {
      return false;
    }
  };

  isSeparator = function(str) {
    var index, j, len, word;
    for (index = j = 0, len = Separators.length; j < len; index = ++j) {
      word = Separators[index];
      if (word === str) {
        console.log(Separators[index] + " seporator");
        return true;
      }
    }
    return false;
  };

  isLiteral = function(str) {
    if (("A" <= str && str <= "Z")) {
      console.log(str + " literal");
      return true;
    } else {
      return false;
    }
  };


  /*
  output = (answer) ->
     Output.innerHTML = "courseos@razumov:~>  " + answer
  
  answer = ''
  output(answer)
   */

}).call(this);

//# sourceMappingURL=script.js.map
