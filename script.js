// Generated by CoffeeScript 1.9.2
(function() {
  var Convol, Input, InputMassive, Keywords, Literals, Output, Separators, deleteConvol, isKeyword, isLiteral, isNumber, isSeparator, lexicalAnalysis, streamWords, syntaxAnalys, value_command,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Input = document.getElementById("input-area");

  Output = document.getElementById("output-area");

  Input.value = "";

  Output.value = "";

  InputMassive = [];

  Convol = [];

  value_command = [];

  Keywords = ["ROWVECTOR", "COLVECTOR", "MATRIX", "PRINT"];

  Separators = ["(", ",", ")", "=", "+", "-", "*", "^", "@"];

  Literals = [];


  /* */

  console.log("courseos@razumov:~> Let's test!");

  streamWords = function() {
    var i, j, k, len, num_n, ref, stage, word;
    stage = Input.value;
    num_n = -1;
    if (event.keyCode === 13) {
      for (j = 0, len = stage.length; j < len; j++) {
        word = stage[j];
        for (i = k = 0, ref = word.length; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
          if (word.charAt(i) === "\n") {
            num_n++;
          }
        }
      }
      InputMassive = stage.split("\n");
      lexicalAnalysis(InputMassive, num_n);
      Convol.push([0, 0]);
      return syntaxAnalys();
    }
  };

  lexicalAnalysis = function(arr, n) {
    var i, iK, iL, iN, iS, j, preResult, ref, ref1, ref2, results, word;
    word = arr[n];
    console.log(word);
    word = word.replace(/\s+$/, "");
    preResult = "";
    results = [];
    for (i = j = 0, ref = word.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
      if ((ref1 = word.charAt(i), indexOf.call(Separators, ref1) >= 0) || word.charAt(i) === ' ' || i === word.length) {
        iK = isKeyword(preResult, word);
        if (iK === false) {
          iL = isLiteral(preResult, word);
        }
        iN = isNumber(preResult, word);
        iS = isSeparator(word.charAt(i), word);
        if (iK === true) {
          preResult = "";
          continue;
        }
        if (iS === true) {
          preResult = "";
          continue;
        }
        if (iL === true) {
          preResult = "";
          continue;
        }
        if (iN === true) {
          preResult = "";
          continue;
        }
        if (ref2 = word.charAt(i - 1), indexOf.call(Separators, ref2) >= 0) {
          continue;
        }
        if (word.charAt(i - 1) === " ") {
          continue;
        }
        if (word.charAt(i) === "") {
          continue;
        }
        console.log("undefined symbol");
        preResult = "";
        continue;
      }
      results.push(preResult += word.charAt(i));
    }
    return results;
  };

  Input.addEventListener('keyup', streamWords, false);

  syntaxAnalys = function() {
    var j, k, l, len, len1, len2, results, word;
    if (Convol[0][0] === 1 && Convol[0][1] === 0) {
      if (Convol[1][0] === 3) {
        if (Literals[Convol[1][1]][1] === false && Literals[Convol[1][1]][3] === false && Literals[Convol[1][1]][5] === false) {
          if (Convol[2][0] === 2 && Convol[2][1] === 0) {
            if (Convol[3][0] === 4) {
              if (Convol[4][0] === 2 && Convol[4][1] === 1) {
                if (Convol[5][0] === 4) {
                  if (Convol[6][0] === 2 && Convol[6][1] === 2) {
                    if (Convol[7][0] === 0) {
                      Literals[Convol[1][1]][5] = "ROWVECTOR";
                      Literals[Convol[1][1]][1] = Convol[3][1];
                      Literals[Convol[1][1]][2] = Convol[5][1];
                      console.log(Convol);
                      console.log(Literals);
                      deleteConvol();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (Convol[0][0] === 1 && Convol[0][1] === 1) {
      if (Convol[1][0] === 3) {
        if (Literals[Convol[1][1]][1] === false && Literals[Convol[1][1]][2] === false && Literals[Convol[1][1]][3] === false) {
          if (Convol[2][0] === 2 && Convol[2][1] === 0) {
            if (Convol[3][0] === 4) {
              if (Convol[4][0] === 2 && Convol[4][1] === 1) {
                if (Convol[5][0] === 4) {
                  if (Convol[6][0] === 2 && Convol[6][1] === 2) {
                    if (Convol[7][0] === 0) {
                      Literals[Convol[1][1]][5] = "COLVECTOR";
                      Literals[Convol[1][1]][1] = Convol[3][1];
                      Literals[Convol[1][1]][2] = Convol[5][1];
                      console.log(Convol);
                      console.log(Literals);
                      deleteConvol();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (Convol[0][0] === 1 && Convol[0][1] === 2) {
      if (Convol[1][0] === 3) {
        if (Literals[Convol[1][1]][1] === false && Literals[Convol[1][1]][2] === false && Literals[Convol[1][1]][3] === false) {
          if (Convol[2][0] === 2 && Convol[2][1] === 0) {
            if (Convol[3][0] === 2 && Convol[3][1] === 0) {
              if (Convol[4][0] === 4) {
                if (Convol[5][0] === 2 && Convol[5][1] === 1) {
                  if (Convol[6][0] === 4) {
                    if (Convol[7][0] === 2 && Convol[7][1] === 2) {
                      if (Convol[8][0] === 2 && Convol[8][1] === 0) {
                        if (Convol[9][0] === 4) {
                          if (Convol[10][0] === 2 && Convol[10][1] === 1) {
                            if (Convol[11][0] === 4) {
                              if (Convol[12][0] === 2 && Convol[12][1] === 2) {
                                if (Convol[13][0] === 2 && Convol[13][1] === 2) {
                                  if (Convol[14][0] === 0) {
                                    Literals[Convol[1][1]][5] = "MATRIX";
                                    Literals[Convol[1][1]][1] = Convol[4][1];
                                    Literals[Convol[1][1]][2] = Convol[6][1];
                                    Literals[Convol[1][1]][3] = Convol[9][1];
                                    Literals[Convol[1][1]][4] = Convol[11][1];
                                    console.log(Convol);
                                    console.log(Literals);
                                    deleteConvol();
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (Convol[0][0] === 1 && Convol[0][1] === 3) {
      if (Convol[1][0] === 2 && Convol[1][1] === 0) {
        if (Convol[2][0] === 3) {
          if (Convol[3][0] === 2 && Convol[3][1] === 2) {
            if (Convol[4][0] === 0) {
              for (j = 0, len = Literals.length; j < len; j++) {
                word = Literals[j];
                if (word[0] === Literals[Convol[2][1]][0] && Literals[Convol[2][1]][5] !== false) {
                  console.log("PRINT IS...");
                  deleteConvol();
                }
              }
            }
          }
        }
      }
    }
    if (Convol[0][0] === 3) {
      for (k = 0, len1 = Literals.length; k < len1; k++) {
        word = Literals[k];
        if (word[0] === Literals[Convol[0][1]][0] && Literals[Convol[0][1]][5] === "ROWVECTOR" || Literals[Convol[0][1]][5] === "COLVECTOR") {
          if (Convol[1][0] === 2 && Convol[1][1] === 0) {
            if (Convol[2][0] === 4 && Convol[2][1] === '1' || Convol[2][1] === '2') {
              if (Convol[3][0] === 2 && Convol[3][1] === 2) {
                if (Convol[4][0] === 0) {
                  console.log("VECTOR " + Literals[Convol[0][1]][Convol[2][1]]);
                  deleteConvol();
                }
              }
            }
          }
        }
      }
    }
    if (Convol[0][0] === 3) {
      results = [];
      for (l = 0, len2 = Literals.length; l < len2; l++) {
        word = Literals[l];
        if (word[0] === Literals[Convol[0][1]][0] && Literals[Convol[0][1]][5] === "MATRIX") {
          if (Convol[1][0] === 2 && Convol[1][1] === 0) {
            if (Convol[2][0] === 4 && Convol[2][1] === '1' || Convol[2][1] === '2') {
              if (Convol[3][0] === 2 && Convol[3][1] === 1) {
                if (Convol[4][0] === 4 && Convol[4][1] === '1' || Convol[4][1] === '2') {
                  if (Convol[5][0] === 2 && Convol[5][1] === 2) {
                    if (Convol[6][0] === 0) {
                      if (Convol[2][1] === '1' && Convol[4][1] === '1') {
                        console.log("MATRIX " + Literals[Convol[0][1]][1]);
                      }
                      if (Convol[2][1] === '1' && Convol[4][1] === '2') {
                        console.log("MATRIX " + Literals[Convol[0][1]][2]);
                      }
                      if (Convol[2][1] === '2' && Convol[4][1] === '1') {
                        console.log("MATRIX " + Literals[Convol[0][1]][3]);
                      }
                      if (Convol[2][1] === '2' && Convol[4][1] === '2') {
                        console.log("MATRIX " + Literals[Convol[0][1]][4]);
                      }
                      results.push(deleteConvol());
                    } else {
                      results.push(void 0);
                    }
                  } else {
                    results.push(void 0);
                  }
                } else {
                  results.push(void 0);
                }
              } else {
                results.push(void 0);
              }
            } else {
              results.push(void 0);
            }
          } else {
            results.push(void 0);
          }
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  };

  deleteConvol = function() {
    return Convol = [];
  };

  isKeyword = function(str, command) {
    var index, j, len, word;
    for (index = j = 0, len = Keywords.length; j < len; index = ++j) {
      word = Keywords[index];
      if (word === str) {
        Convol.push([1, index]);
        return true;
      }
    }
    return false;
  };

  isNumber = function(str, command) {
    if (("0" <= str && str <= "9")) {
      Convol.push([4, str]);
      value_command.push(str);
      console.log("courseos@razumov:~> " + str + " is number");
      return true;
    }
    return false;
  };

  isSeparator = function(str, command) {
    var index, j, len, word;
    for (index = j = 0, len = Separators.length; j < len; index = ++j) {
      word = Separators[index];
      if (word === str) {
        Convol.push([2, index]);
        console.log("courseos@razumov:~> " + Separators[index] + " is separator");
        return true;
      }
    }
    return false;
  };

  isLiteral = function(str, command) {
    var flag, index, j, len, word;
    if (("A" <= str && str <= "Z")) {
      flag = false;
      for (index = j = 0, len = Literals.length; j < len; index = ++j) {
        word = Literals[index];
        if (word[0] === str) {
          Convol.push([3, index]);
          console.log("courseos@razumov:~> " + str + " is literal");
          flag = true;
        }
      }
      if (flag === false) {
        console.log("courseos@razumov:~> " + str + " is new literal");
        Literals.push([str, false, false, false, false, false]);
        console.log(Literals[0]);
        Convol.push([3, Literals.length - 1]);
      }
      return true;
    }
    return false;
  };

}).call(this);

//# sourceMappingURL=script.js.map
